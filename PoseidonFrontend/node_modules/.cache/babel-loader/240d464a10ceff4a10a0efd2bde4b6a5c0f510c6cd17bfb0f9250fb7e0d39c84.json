{"ast":null,"code":"var _jsxFileName = \"/Users/prajnyiqueghimire/Pandora-s-Box/hades/src/components/Grading.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradingApp = () => {\n  _s();\n  const [gradingResult, setGradingResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [file, setFile] = useState(null);\n  const [category, setCategory] = useState(\"\"); // Dropdown for categories\n\n  const API_URL_CHATGPT = \"https://chatgpt-api-url.ngrok-free.app\";\n  const API_URL_GEMINIAI = \"https://geminiai-api-url.ngrok-free.app\";\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setGradingResult(null);\n    try {\n      if (!file || !category) {\n        setError(\"Please select a category and upload a file.\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"category\", category);\n\n      // Check file type and send to the appropriate backend\n      const response = await axios.post(`${category === \"essay\" || category === \"code\" ? API_URL_CHATGPT : API_URL_GEMINIAI}/grade`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setGradingResult(response.data.grading_result);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Something went wrong.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grading App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setFile(e.target.files[0]),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"essay\",\n              children: \"Essay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"chemistry\",\n              children: \"Chemistry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"physics\",\n              children: \"Physics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"math\",\n              children: \"Math\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"code\",\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), gradingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Grading Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: gradingResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(GradingApp, \"z64lMZiO80vkzEn3k+IL0WZ7wRE=\");\n_c = GradingApp;\nexport default GradingApp;\nvar _c;\n$RefreshReg$(_c, \"GradingApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GradingApp","_s","gradingResult","setGradingResult","error","setError","file","setFile","category","setCategory","API_URL_CHATGPT","API_URL_GEMINIAI","handleSubmit","e","preventDefault","formData","FormData","append","response","post","headers","data","grading_result","err","_err$response","_err$response$data","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","required","value","color","_c","$RefreshReg$"],"sources":["/Users/prajnyiqueghimire/Pandora-s-Box/hades/src/components/Grading.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst GradingApp = () => {\n    const [gradingResult, setGradingResult] = useState(null);\n    const [error, setError] = useState(null);\n    const [file, setFile] = useState(null);\n    const [category, setCategory] = useState(\"\"); // Dropdown for categories\n\n    const API_URL_CHATGPT = \"https://chatgpt-api-url.ngrok-free.app\";\n    const API_URL_GEMINIAI = \"https://geminiai-api-url.ngrok-free.app\";\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n        setGradingResult(null);\n\n        try {\n            if (!file || !category) {\n                setError(\"Please select a category and upload a file.\");\n                return;\n            }\n\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append(\"category\", category);\n\n            // Check file type and send to the appropriate backend\n            const response = await axios.post(\n                `${category === \"essay\" || category === \"code\" ? API_URL_CHATGPT : API_URL_GEMINIAI}/grade`,\n                formData,\n                { headers: { \"Content-Type\": \"multipart/form-data\" } }\n            );\n\n            setGradingResult(response.data.grading_result);\n        } catch (err) {\n            setError(err.response?.data?.error || \"Something went wrong.\");\n        }\n    };\n\n    return (\n        <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n            <h1>Grading App</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>\n                        Upload File:\n                        <input\n                            type=\"file\"\n                            onChange={(e) => setFile(e.target.files[0])}\n                            required\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Select Category:\n                        <select\n                            value={category}\n                            onChange={(e) => setCategory(e.target.value)}\n                            required\n                        >\n                            <option value=\"\">--Select--</option>\n                            <option value=\"essay\">Essay</option>\n                            <option value=\"chemistry\">Chemistry</option>\n                            <option value=\"physics\">Physics</option>\n                            <option value=\"math\">Math</option>\n                            <option value=\"code\">Code</option>\n                        </select>\n                    </label>\n                </div>\n                <button type=\"submit\">Grade</button>\n            </form>\n\n            {gradingResult && (\n                <div>\n                    <h2>Grading Result</h2>\n                    <p>{gradingResult}</p>\n                </div>\n            )}\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </div>\n    );\n};\n\nexport default GradingApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}