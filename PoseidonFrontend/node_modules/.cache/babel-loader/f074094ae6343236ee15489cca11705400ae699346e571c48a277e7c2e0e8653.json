{"ast":null,"code":"var _jsxFileName = \"/Users/prajnyiqueghimire/Pandora-s-Box/hades/src/components/Grading.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradingApp = () => {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [studentAnswer, setStudentAnswer] = useState(\"\");\n  const [gradingResult, setGradingResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [file, setFile] = useState(null);\n  const [inputType, setInputType] = useState(\"text\"); // \"text\" or \"file\"\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setGradingResult(null);\n    try {\n      if (inputType === \"file\" && file) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const response = await axios.post(\"https://94c1-2620-8d-8000-e018-1565-79d8-5e8e-4dd2.ngrok-free.app/grade\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        setGradingResult(response.data.grading_result);\n      } else if (inputType === \"text\") {\n        const response = await axios.post(\"https://307c-2620-8d-8000-e018-1565-79d8-5e8e-4dd2.ngrok-free.app/grade\", {\n          question,\n          student_answer: studentAnswer\n        });\n        setGradingResult(response.data.grading_result);\n      } else {\n        setError(\"Please select a valid input type and provide input.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Something went wrong.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grading App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"text\",\n            checked: inputType === \"text\",\n            onChange: () => setInputType(\"text\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), \"Text Input\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"file\",\n            checked: inputType === \"file\",\n            onChange: () => setInputType(\"file\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), \"File Upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), inputType === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Question:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            rows: \"4\",\n            cols: \"50\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Student Answer:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: studentAnswer,\n            onChange: e => setStudentAnswer(e.target.value),\n            rows: \"4\",\n            cols: \"50\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), inputType === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setFile(e.target.files[0]),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), gradingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Grading Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: gradingResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(GradingApp, \"Msl2aUIB5prhBpRyYgsfFOu2NJw=\");\n_c = GradingApp;\nexport default GradingApp;\nvar _c;\n$RefreshReg$(_c, \"GradingApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GradingApp","_s","question","setQuestion","studentAnswer","setStudentAnswer","gradingResult","setGradingResult","error","setError","file","setFile","inputType","setInputType","handleSubmit","e","preventDefault","formData","FormData","append","response","post","headers","data","grading_result","student_answer","err","_err$response","_err$response$data","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","checked","onChange","marginLeft","target","rows","cols","required","files","color","_c","$RefreshReg$"],"sources":["/Users/prajnyiqueghimire/Pandora-s-Box/hades/src/components/Grading.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst GradingApp = () => {\n    const [question, setQuestion] = useState(\"\");\n    const [studentAnswer, setStudentAnswer] = useState(\"\");\n    const [gradingResult, setGradingResult] = useState(null);\n    const [error, setError] = useState(null);\n    const [file, setFile] = useState(null);\n    const [inputType, setInputType] = useState(\"text\"); // \"text\" or \"file\"\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n        setGradingResult(null);\n\n        try {\n            if (inputType === \"file\" && file) {\n                const formData = new FormData();\n                formData.append(\"file\", file);\n\n                const response = await axios.post(\"https://94c1-2620-8d-8000-e018-1565-79d8-5e8e-4dd2.ngrok-free.app/grade\", formData, {\n                    headers: { \"Content-Type\": \"multipart/form-data\" },\n                });\n                setGradingResult(response.data.grading_result);\n            } else if (inputType === \"text\") {\n                const response = await axios.post(\"https://307c-2620-8d-8000-e018-1565-79d8-5e8e-4dd2.ngrok-free.app/grade\", {\n                    question,\n                    student_answer: studentAnswer,\n                });\n                setGradingResult(response.data.grading_result);\n            } else {\n                setError(\"Please select a valid input type and provide input.\");\n            }\n        } catch (err) {\n            setError(err.response?.data?.error || \"Something went wrong.\");\n        }\n    };\n\n    return (\n        <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n            <h1>Grading App</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            value=\"text\"\n                            checked={inputType === \"text\"}\n                            onChange={() => setInputType(\"text\")}\n                        />\n                        Text Input\n                    </label>\n                    <label style={{ marginLeft: \"20px\" }}>\n                        <input\n                            type=\"radio\"\n                            value=\"file\"\n                            checked={inputType === \"file\"}\n                            onChange={() => setInputType(\"file\")}\n                        />\n                        File Upload\n                    </label>\n                </div>\n\n                {inputType === \"text\" && (\n                    <div>\n                        <label>\n                            Question:\n                            <textarea\n                                value={question}\n                                onChange={(e) => setQuestion(e.target.value)}\n                                rows=\"4\"\n                                cols=\"50\"\n                                required\n                            />\n                        </label>\n                        <label>\n                            Student Answer:\n                            <textarea\n                                value={studentAnswer}\n                                onChange={(e) => setStudentAnswer(e.target.value)}\n                                rows=\"4\"\n                                cols=\"50\"\n                                required\n                            />\n                        </label>\n                    </div>\n                )}\n\n                {inputType === \"file\" && (\n                    <div>\n                        <label>\n                            Upload File:\n                            <input\n                                type=\"file\"\n                                onChange={(e) => setFile(e.target.files[0])}\n                                required\n                            />\n                        </label>\n                    </div>\n                )}\n\n                <button type=\"submit\">Grade</button>\n            </form>\n\n            {gradingResult && (\n                <div>\n                    <h2>Grading Result</h2>\n                    <p>{gradingResult}</p>\n                </div>\n            )}\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </div>\n    );\n};\n\nexport default GradingApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}